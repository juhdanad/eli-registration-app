# Generated by Django 4.2.4 on 2023-08-14 17:33

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('email', models.EmailField(error_messages={'unique': 'A user with that email already exists.'}, max_length=254, unique=True, verbose_name='email address')),
                ('is_admin', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=True)),
                ('user_type', models.CharField(choices=[('admin', 'Admin'), ('visitor', 'Visitor'), ('client', 'Client')], max_length=255)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
        ),
        migrations.CreateModel(
            name='UserData',
            fields=[
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL)),
                ('registration_type', models.CharField(choices=[('visitor', 'Visitor'), ('client', 'Client')], max_length=255)),
                ('registration_state', models.CharField(choices=[('initial', 'Initial'), ('admin_requested_modify', 'Admin Requested Modify'), ('waiting_for_approval', 'Waiting For Approval'), ('approved', 'Approved'), ('rejected', 'Rejected')], default='initial', max_length=255)),
                ('orcid_id', models.CharField(blank=True, default='', max_length=255)),
                ('orcid_id_comment', models.TextField(blank=True, default='')),
                ('name', models.CharField(max_length=255)),
                ('name_comment', models.TextField(blank=True, default='')),
                ('email_comment', models.TextField(blank=True, default='')),
                ('phone_number', models.CharField(max_length=255)),
                ('phone_number_comment', models.TextField(blank=True, default='')),
                ('company', models.CharField(blank=True, default='', max_length=255)),
                ('company_comment', models.TextField(blank=True, default='')),
                ('country_of_origin', models.CharField(blank=True, default='', max_length=255)),
                ('country_of_origin_comment', models.TextField(blank=True, default='')),
            ],
        ),
        migrations.AddConstraint(
            model_name='userdata',
            constraint=models.CheckConstraint(check=models.Q(('registration_type__in', ['visitor', 'client'])), name='registration_type_check'),
        ),
        migrations.AddConstraint(
            model_name='userdata',
            constraint=models.CheckConstraint(check=models.Q(('registration_state__in', ['initial', 'admin_requested_modify', 'waiting_for_approval', 'approved', 'rejected'])), name='registration_state_check'),
        ),
        migrations.AddConstraint(
            model_name='userdata',
            constraint=models.CheckConstraint(check=models.Q(models.Q(('registration_type', 'visitor'), _negated=True), models.Q(('company', ''), ('company_comment', ''), ('country_of_origin', ''), ('country_of_origin_comment', '')), _connector='OR'), name='visitor_allowed_fields_check'),
        ),
        migrations.AddConstraint(
            model_name='userdata',
            constraint=models.CheckConstraint(check=models.Q(models.Q(('registration_type', 'client'), _negated=True), models.Q(models.Q(('company', ''), _negated=True), models.Q(('country_of_origin', ''), _negated=True), ('orcid_id', ''), ('orcid_id_comment', '')), _connector='OR'), name='client_allowed_fields_check'),
        ),
        migrations.AddConstraint(
            model_name='user',
            constraint=models.CheckConstraint(check=models.Q(('user_type__in', ['admin', 'visitor', 'client'])), name='user_type_check'),
        ),
    ]
